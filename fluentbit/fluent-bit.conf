[SERVICE]
    Flush         1
    Log_Level     info
    parsers_file  parser.conf

[INPUT]
    name tail
    Path /var/lib/docker/containers/*/*.log
    Path_Key filepath
    Parser docker
    Skip_Empty_Lines true
    Tag container_logs
    Docker_Mode true
    Read_from_Head true

# Filter that uses lua scripts to extract container_id from file name and add it as an new field to log
[FILTER]
    Name lua
    Match container_logs
    script read_container_id_and_name.lua
    call get_container_id

# Filter that uses lua scripts to read container's config file and extract container_name then add it as a new field to log
[FILTER]
    Name lua
    Match container_logs
    script formatter.lua
    call get_container_name

# now you can classify your container logs by container_name using rewrite_tag
# Filter that change the tag based on logs' container_name
[FILTER]
    Name          rewrite_tag
    Match         container_logs
    Rule          $container_name ^container_name_a$ a_logs false
    Rule          $container_name ^container_name_b$ b_logs false
    Rule          $container_name ^container_name_c$ c_logs false
    Emitter_Name  re_emitted

# adapted from https://docs.fluentbit.io/manual/pipeline/outputs/s3#usage-with-minio
[OUTPUT]
    name                          s3
    match                         docker.*
    bucket                        container-logs
    endpoint                      http://minio:9000
    s3_key_format                 /%y%m%d-%h%m/%y%m%d-%h%m%s-${container_name}.log
    s3_key_format_tag_delimiters  .-
    use_put_object                on
    upload_chunk_size             6m


